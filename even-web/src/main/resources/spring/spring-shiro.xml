<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
		<!--将缓存管理器，交给安全管理器-->
		<property name="cacheManager" ref="redisCacheManager"/>
		<!-- 注入session管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住密码管理 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="ShiroRealm" class="com.even.interceptor.shiro.ShiroRealm" ></bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
	 	<property name="domain" value=".even.com"/>
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>
		<property name="cookie" ref="rememberMeCookie"/>
	</bean>

	<!-- redis 缓存管理-->
	<bean id="redisCacheManager" class="com.even.common.shiro.CacheManager" />

	<!-- 在方法中 注入  securityManager ，进行代理控制 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>

	<!-- 启用shrio授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<!-- 会话管理器 start -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时长，单位毫秒 1小时: 3600000 -->
		<!-- 设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 1800000 -->
		<property name="globalSessionTimeout" value="1800000"/>
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true"/>
		<!-- 是否开启会话验证器，默认是开启的 -->
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<!--会话验证调度器,验证会话是否已过期-->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<!-- Shiro提供SessionDAO用于会话的CRUD -->
		<property name="sessionDAO" ref="sessionDAO"/>
		<!--是否启用/禁用Session Id Cookie，默认启用-->
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<!-- 设置调度时间间隔，单位毫秒，默认就是1小时 -->
		<property name="interval" value="1800000"/>
		<!-- 设置会话验证调度器进行会话验证时的会话管理器 -->
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
	<!-- 会话DAO -->
	<!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
		<!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
	<!--</bean>-->
	<bean id="sessionDAO" class="com.even.common.shiro.SessionDao" >
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话ID生成器，用于生成会话ID，默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成-->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	<!-- 会话Cookie模板，sessionManager创建会话Cookie的模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 设置Cookie名字，默认为JSESSIONID -->
		<property name="name" value="bjg_sid"/>
		<property name="httpOnly" value="true"/>
		<!-- 设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie -->
		<property name="maxAge" value="-1"/>
		<!-- 设置Cookie的域名，默认空，即当前访问的域名 -->
		<!-- <property name="domain" value=".bejavagod.com"/> -->
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<!--<property name="loginUrl" value="/user/userLoginPage" />-->
		<!---->
		<!--<property name="successUrl" value="/success.jsp" />-->

		<!--<property name="unauthorizedUrl" value="/noAuth" />-->

		<!--<property name="filterChainDefinitions">-->
			<!--<value>-->
			<!--/static/**=anon-->
			<!--/admin/**=authc,roles[admin]-->
			<!--/user/userLogin=anon-->
			<!--/user/**=authc,roles[boss]-->
			<!--/**= anon-->
			<!--</value>-->
		<!--</property>-->
	</bean>

</beans>
