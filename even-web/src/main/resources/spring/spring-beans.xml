<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/websocket
    http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

    <!--******************************************** redis 配置 *****************************************************-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
     p:hostName="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"  p:poolConfig-ref="redisPoolConfig"/>

    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">-->
        <!--<constructor-arg ref="redisPoolConfig"/>-->
        <!--<constructor-arg value="${redis.host}"/>-->
        <!--<constructor-arg type="int" value="${redis.port}"/>-->
        <!--<constructor-arg type="int" value="${redis.timeout}"/>-->
        <!--<constructor-arg type="java.lang.String" value="${redis.password}"/>-->
        <!--<constructor-arg type="int" value="${redis.dbindex}"/>-->
    <!--</bean>-->

    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="redisUtil" class="com.even.common.redis.RedisUtil" />

    <bean id="redisCache" class="com.even.common.redis.RedisCache">
        <property name="redisUtil" ref="redisUtil" />
    </bean>

    <!--********************************************* rocketMq配置 **************************************************-->
    <bean id="rocketMqProducer" class="com.even.common.rocketmq.SmsRocketMQProducer" init-method="init" destroy-method="destory">
        <property name="namesrvAddr" value="${rocketmq.namesrvAddr}"></property>
        <property name="producerGroup" value="${rocketmq.producerGroup}"></property>
    </bean>

    <bean id="rocketMqConsumer" class="com.even.common.rocketmq.SmsRocketMQConsumer" init-method="init" destroy-method="destory">
        <property name="namesrvAddr" value="${rocketmq.namesrvAddr}"></property>
        <property name="consumerGroup" value="${rocketmq.consumerGroup}"></property>
    </bean>

</beans>
